name: 'Sniff action'
description: 'Runs Seekret sniffer'

inputs:
  client_id:
    description: 'Client ID'
    required: true
  client_secret:
    description: 'Client secret'
    required: true
  workspace:
    description: 'Workspace'
    required: true
  anonymization:
    description: 'Should we anonymize traffic ("true" or "false")'
    required: false
    default: "true"
  auth_url:
    description: 'Auth URL'
    required: false
  sniffer_image_tag:
    description: 'Image tag of the sniffer to use'
    required: true
    default: "dev"

runs:
  using: "composite"
  steps:
    - name: Run sniffer docker
      shell: bash
      env:
        SEEKRET_SNIFFER_AUTHENTICATION_AUTH_URL: ${{ github.event.inputs.auth_url }}
        SEEKRET_SNIFFER_AUTHENTICATION_WORKSPACE: ${{ github.event.inputs.workspace }}
        SEEKRET_SNIFFER_AUTHENTICATION_CLIENT_ID: ${{ github.event.inputs.client_id }}
        SEEKRET_SNIFFER_AUTHENTICATION_CLIENT_SECRET: ${{ github.event.inputs.client_secret }}
        SEEKRET_SNIFFER_ANONYMIZATION_ENABLED: ${{ github.event.inputs.anonymization }}
        SEEKRET_SNIFFER_STORAGE_UPLOADING_STRATEGY_UPLOAD_INTERVAL: 10s
        SEEKRET_SNIFFER_LOG_CONSOLE_LOGGING_ENABLED: true
        SEEKRET_SNIFFER_LOG_LEVEL: debug

      run: |
        env > env.list
        sudo docker run -t -a STDOUT --env-file env.list --net=host --privileged -v /sys:/sys  \
          -v /var/run/docker.sock:/var/run/docker.sock -v /proc:/proc -v /etc/os-release:/etc/os-release    \
          -v /var/lib:/var/lib -v /etc/machine-id:/etc/machine-id gcr.io/seekret-tests/ebpf-sniffer:${{ github.event.inputs.sniffer_image_tag }} &
